import Celos.*
import EstadosDeAnimo.*
import Personalidades.*
import Relaciones.*
import Sim.*
import Trabajos.*


test "29.a Hacer que un Sim vaya a trabajar." {

	var pepe = new Sim("masculino", 30, 100, [], interesado, 100, "femenino")	
	pepe.asignarTrabajoAburrido(5000, 10)
	pepe.trabajar()
	assert.that((pepe.dinero() == 5100) and (pepe.nivelFelicidad() == 90))

}

test "29.b Hacer que un Sim desocupado Sim vaya a trabajar" {

	var pepe = new Sim("masculino", 30, 100, [], interesado, 100, "femenino")	
	pepe.trabajar()
	assert.that((pepe.dinero() == 100) and (pepe.nivelFelicidad() == 100))

}

/*30. ¿Hay alguna repeticion de logica que sea imposible salvar con las herramientas vistas hasta ahora?

Si, las asignaciones de los Tipos de Trabajos que tienen que ser una por caso en vez de generalizar y crear un 'new TipoDeTrabajo'*/



//ENTREGA 2

//4.Hacer que el Sim cambie su estado de ánimo (si corresponde) cuando va a trabajar.

test "4.a Un sim con empleo va a trabajar y su estado de animo cambia a normal" {

	var pepe = new Sim("masculino", 30, 100, [], interesado, 100, "femenino")	
	pepe.asignarTrabajoAburrido(5000, 10)
	pepe.sentirse(incomodo)
	pepe.trabajar()
	assert.equals(pepe.estadoDeAnimo(), normal)
}

test "4.b Un sim Desempleado va a trabajar y su estado de animo no cambia" {

	var pepe = new Sim("masculino", 30, 100, [], interesado, 100, "femenino")	
	pepe.sentirse(incomodo)
	pepe.trabajar()
	assert.equals(pepe.estadoDeAnimo(), incomodo)
}

test "4.c Un sim con trabajo aburrido hasta la muerte va a trabajar y pierde felicidad"{
	var pepe = new Sim("masculino", 30, 200, [], interesado, 100, "femenino")	
	pepe.asignarTrabajoAburridoHastaLaMuerte(5000, 30)
	pepe.trabajar()
	assert.equals(pepe.nivelFelicidad(), 80)
}

test "4.d Un sim con trabajo de mercenario gana $100 + 2% de lo que tenia"{
	var pepe = new Sim("masculino", 30, 200, [], interesado, 100, "femenino")	
	pepe.asignarTrabajoMercenario()
	pepe.trabajar()
	assert.equals(pepe.dinero(), 202)
	
}

test "4.e Un mercenario social gana $100 + 2% de lo que tenia + cantidad de amigos"{
	var camila = new Sim("femenino", 10, 10, [], buenazo, 200, "femenino")
	var rosalinda = new Sim("femenino", 10, 10, [], buenazo, 200, "femenino")
	var pepe = new Sim("masculino", 30, 200, [camila, rosalinda], interesado, 100, "femenino")	
	pepe.asignarTrabajoMercenarioSocial()
	pepe.trabajar()
	assert.equals(pepe.dinero(), 204)
	
}



